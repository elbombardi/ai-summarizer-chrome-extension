// This script is injected into the active YouTube video page.
// It listens for a message from the background script to extract the transcript's baseUrl.

chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {
    if (request.action === 'getVideoTranscript') {
        let transcriptBaseUrl = '';

        try {
            // Try to access ytInitialPlayerResponse directly from the window object
            // This object contains metadata including caption tracks
            if (window.ytInitialPlayerResponse && 
                window.ytInitialPlayerResponse.captions && 
                window.ytInitialPlayerResponse.captions.playerCaptionsTracklistRenderer &&
                window.ytInitialPlayerResponse.captions.playerCaptionsTracklistRenderer.captionTracks) {
                
                const captionTracks = window.ytInitialPlayerResponse.captions.playerCaptionsTracklistRenderer.captionTracks;

                // Prioritize English, then try any non-autogenerated track, then any track
                let selectedTrack = null;
                for (const track of captionTracks) {
                    // Look for English specifically
                    if (track.languageCode === 'en' && (track.vssId === undefined || track.vssId.startsWith('.'))) { // vssId starting with . usually means not auto-generated
                        selectedTrack = track;
                        break;
                    }
                }
                
                // If no specific English track, look for any non-autogenerated track
                if (!selectedTrack) {
                    for (const track of captionTracks) {
                        if (track.vssId === undefined || track.vssId.startsWith('.')) { // Prefer manual captions
                            selectedTrack = track;
                            break;
                        }
                    }
                }

                // If still no track, just take the first one available
                if (!selectedTrack && captionTracks.length > 0) {
                    selectedTrack = captionTracks[0];
                }

                if (selectedTrack && selectedTrack.baseUrl) {
                    transcriptBaseUrl = selectedTrack.baseUrl;
                }
            }
        } catch (e) {
            console.error("Error extracting ytInitialPlayerResponse or caption tracks:", e);
            // Fallback to DOM scraping if direct access fails (though less reliable)
            // Removed this fallback as per user's request for Go-like parsing.
        }
        
        // Send the extracted baseUrl (or empty string if not found).
        sendResponse({ transcriptBaseUrl: transcriptBaseUrl });
    }
    
    return true; 
});

